
module my-kubelet 1.0;

require {
	type init_t;
	type kmsg_device_t;
	type http_cache_port_t;
	type intermapper_port_t;
	type iptables_var_run_t;
	type var_run_t;
	type container_file_t;
	type kernel_t;
	type proc_kmsg_t;
	type container_runtime_t;
	type var_lib_t;
	class file { create execute execute_no_trans getattr map write };
	class unix_stream_socket connectto;
	class sock_file { create rename unlink };
	class chr_file read;
	class system syslog_read;
	class tcp_socket name_connect;
}

#============= init_t ==============

#!!!! This avc is allowed in the current policy
allow init_t container_file_t:sock_file { create unlink };

#!!!! This avc is allowed in the current policy
allow init_t container_runtime_t:file write;

#!!!! This avc is allowed in the current policy
allow init_t container_runtime_t:unix_stream_socket connectto;

#!!!! This avc is allowed in the current policy
allow init_t http_cache_port_t:tcp_socket name_connect;

#!!!! This avc is allowed in the current policy
allow init_t intermapper_port_t:tcp_socket name_connect;

#!!!! This avc is allowed in the current policy
allow init_t iptables_var_run_t:file create;

#!!!! This avc is allowed in the current policy
allow init_t kernel_t:system syslog_read;

#!!!! This avc is allowed in the current policy
allow init_t kmsg_device_t:chr_file read;

#!!!! This avc is allowed in the current policy
allow init_t proc_kmsg_t:file getattr;

#!!!! This avc is allowed in the current policy
allow init_t var_lib_t:file { execute execute_no_trans map };

#!!!! This avc is allowed in the current policy
allow init_t var_run_t:sock_file rename;
